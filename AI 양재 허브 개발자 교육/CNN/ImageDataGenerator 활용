from tensorflow import keras
import os

### 1. Cats and Dogs 데이터셋 다운로드

url = 'https://storage.googleapis.com/mledu-datasets/cats_and_dogs_filtered.zip'

path_zip = keras.utils.get_file(fname = 'cats_and_dogs_filtered.zip', origin = url,
                                extract = True, cache_dir = '/content')

#from google.colab import drive
#drive.mount('/content/drive')

### 2. ImageDataGenerator를 이용해 이미지 파일을 load 하기 위한 경로 지정

train_dir = '/content/datasets/cats_and_dogs_filtered/train'  #파일 우클릭 경로복사

### 3.ImageDataGenerator 객체 생성

from tensorflow.keras.preprocessing.image import ImageDataGenerator

datagen = ImageDataGenerator()

type(datagen)

### 4. ImageDataGenerator.flow_from_directory() 함수 사용
* ImageDataGenerator에 데이터를 읽어오는 경로 연결
* 이미지 데이터를 읽어 텐서 객체로 변환하는 파이프라인 설정
* DirectoryIterator 객체로 변화됨

train_generator  = datagen.flow_from_directory(
    directory = train_dir,
    target_size = (150,150),
    batch_size = 32,         #이미지의 장 수
    shuffle = True,
    class_mode = 'binary'  #고양이는 0, 개는 1로 인코딩 (label 정보 인코딩하기)
    

)

type(train_generator)

### 5. DirectoryIterator 객체의 속성 및 메서드

> 들여쓴 블록



* .samples : 연결된 경로에서 읽어들일 이미지 파일의 개수

train_generator.samples    #현재 image generator에 연결되어 있는 이미지 개수

* len() : batch 덩어리의 개수 확인 

len(train_generator)

2000/32

* next() : batch 데이터 호출

x,y = next(train_generator) #이미지 데이터와 클래스 데이터 호출

x.shape, y.shape

y  

* .__getitem__(idx) : 원하는 index 의 batch 데이터 호출

x,y = train_generator.__getitem__(62)  #63개의 덩어리 중에서 원하는 거 가져옴

x.shape, y.shape    

train_generator.reset()

#for idx, data in enumerate(train_generator):
  #print(idx, data[0].shape)





